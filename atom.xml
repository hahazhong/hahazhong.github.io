<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HaHazhong&amp;Blog</title>
  
  <subtitle>人生苦短，我用Python</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-08-17T14:24:28.268Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>hahazhong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python基础(一)--标准输入输出</title>
    <link href="http://example.com/2022/08/17/python%E5%9F%BA%E7%A1%80(%E4%B8%80)%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/"/>
    <id>http://example.com/2022/08/17/python%E5%9F%BA%E7%A1%80(%E4%B8%80)%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/</id>
    <published>2022-08-17T13:19:31.000Z</published>
    <updated>2022-08-17T14:24:28.268Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="标准输入"><a href="#标准输入" class="headerlink" title="标准输入"></a>标准输入</h1><p><code>input()</code>函数被称为格式输入语言,即按照用户指定的格式从键盘把数据输入到指定变量中<br>例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="built_in">input</span>(<span class="string">&#x27;请输入年龄:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(x)<span class="comment">#--&gt;请输入年龄:88</span></span><br><span class="line">        <span class="comment">#   88</span></span><br></pre></td></tr></table></figure><p>也可以使用<code>eavl()</code>函数和<code>input()</code>函数结合,实现一次性接受多个数据,给多个变量赋值。并且会把数据转换成对应的格式.<br>例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name, age = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入姓名,年龄:&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(name,age)<span class="comment">#--&gt;请输入姓名,年龄:&#x27;张三&#x27;,88</span></span><br><span class="line">               <span class="comment">#   张三 88</span></span><br></pre></td></tr></table></figure><h1 id="标准输出函数"><a href="#标准输出函数" class="headerlink" title="标准输出函数"></a>标准输出函数</h1><p><code>print()</code>函数可以向控制台输出一个或者多个字符.<br>例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>([表达式<span class="number">1</span>,表达式<span class="number">2</span>,...,表达式n],[sep=分隔符],[end=结束符])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, sep=<span class="string">&#x27;.&#x27;</span>, end=<span class="string">&#x27;。&#x27;</span>)  <span class="comment">#--&gt;a.b。</span></span><br></pre></td></tr></table></figure><h1 id="格式化输出"><a href="#格式化输出" class="headerlink" title="格式化输出"></a>格式化输出</h1><h3 id="格式化字符串"><a href="#格式化字符串" class="headerlink" title="格式化字符串"></a>格式化字符串</h3><p><code>格式化字符串%(表达式,...,表达式n)</code></p><ol><li><code>%[[+/-]n]c</code>:输出ASCII字符.等价于<code>chr()</code>函数.长度为n位(n小于实际长度时,按实际长度输出),+表示右对齐(默认,可省略),-(左对齐).<br>例:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%c&#x27;</span>%<span class="string">&#x27;A&#x27;</span>)  <span class="comment">#--&gt; A</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%c%c%c&#x27;</span> % (<span class="string">&#x27;A&#x27;</span>, <span class="number">66</span>, <span class="literal">True</span>+<span class="number">66</span>))  <span class="comment">#--&gt;ABC</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%c%c%+6c&#x27;</span> % (<span class="string">&#x27;A&#x27;</span>, <span class="number">66</span>, <span class="literal">True</span>+<span class="number">66</span>))  <span class="comment">#--&gt;AB     C</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%6c%c%c&#x27;</span> % (<span class="string">&#x27;A&#x27;</span>, <span class="number">66</span>, <span class="literal">True</span>+<span class="number">66</span>))  <span class="comment">#--&gt;     ABC</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%c%-6c%c&#x27;</span> % (<span class="string">&#x27;A&#x27;</span>, <span class="number">66</span>, <span class="literal">True</span>+<span class="number">66</span>))  <span class="comment">#--&gt;AB     C</span></span><br></pre></td></tr></table></figure></li><li><code>%%</code>:输出%<br>例:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%c%%%c%%%c&#x27;</span> % (<span class="string">&#x27;A&#x27;</span>, <span class="number">66</span>, <span class="literal">True</span>+<span class="number">66</span>))  <span class="comment">#--&gt;A%B%C</span></span><br></pre></td></tr></table></figure></li><li><code>%[[+/-]n]s</code>:输出字符串,等价于<code>str()</code>函数,长度为n位(n小于实际长度时,按实际长度输出),+表示右对齐(默认,可省略),-(左对齐).<br>例:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%c%8s%2c&#x27;</span> % (<span class="number">65</span>, <span class="string">&#x27;python&#x27;</span>, <span class="number">66</span>))  <span class="comment">#--&gt;A  python B</span></span><br></pre></td></tr></table></figure></li><li><code>%[[+/-]n]r</code>:输出表达式,等价于<code>repr()</code>函数,长度为n位(n小于实际长度时,按实际长度输出),+表示右对齐(默认,可省略),-(左对齐).<br>例:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%r*%r*%r&#x27;</span> % (<span class="number">65</span>, <span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;B&#x27;</span>))  <span class="comment">#--&gt;65*&#x27;python&#x27;*&#x27;B&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%r%r%r&#x27;</span> % (<span class="number">65</span>, <span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;x*y&#x27;</span>))  <span class="comment">#--&gt;65&#x27;python&#x27;&#x27;x*y&#x27;</span></span><br></pre></td></tr></table></figure></li><li><code>%[[+/-]n]d</code>、<code>%[[+/-]n]i</code>、<code>%[[+/-]n]u</code>:输出十进制整数,长度为n位(n小于实际长度时,按实际长度输出),+表示右对齐(默认,可省略),-(左对齐).<br>例:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%c%8d%8i%8u%8c&#x27;</span> % (<span class="number">65</span>, <span class="number">12.34</span>, <span class="number">12.34</span>, <span class="number">12.34</span>, <span class="number">66</span>))  <span class="comment">#--&gt;print(&#x27;%c%8d%8i%8u%8c&#x27; % (65, 12.34, 12.34, 12.34, 66))</span></span><br></pre></td></tr></table></figure></li><li><code>%[[+/-]n]o</code>:输出八进制整数,长度为n位(n小于实际长度时,按实际长度输出),+表示右对齐(默认,可省略),-(左对齐).<br>例:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%o&#x27;</span> % <span class="number">22</span>)  <span class="comment">#--&gt;26</span></span><br></pre></td></tr></table></figure></li><li><code>%[[+/-]n]x</code>、<code>%[[+/-]n]X</code>:输出八进制整数,长度为n位(n小于实际长度时,按实际长度输出),+表示右对齐(默认,可省略),-(左对齐).<br>例:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%x%5X&#x27;</span> % (<span class="number">64</span>, <span class="number">64</span>))  <span class="comment">#--&gt;40   40</span></span><br></pre></td></tr></table></figure></li><li><code>%[[+/-]n.m]e</code>、<code>%[[+/-]n.m]E</code>:输出实数,长度为n位(n小于实际长度时,按实际长度输出),m为小数位数,+表示右对齐(默认,可省略),-(左对齐).<br>例:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%e%20.1E&#x27;</span> % (<span class="number">64</span>, <span class="number">64.58</span>))  <span class="comment">#--&gt;6.400000e+01             6.5E+01</span></span><br></pre></td></tr></table></figure></li><li><code>%[[+/-]n.m]f</code>、<code>%[[+/-]n.m]F</code>:输出实数,采用科学计数,长度为n位(n小于实际长度时,按实际长度输出),m为小数位数,+表示右对齐(默认,可省略),-(左对齐).<br>例:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%f%20.1F&#x27;</span> % (<span class="number">64</span>, <span class="number">64.58</span>))  <span class="comment">#--&gt;64.000000                64.6</span></span><br></pre></td></tr></table></figure></li><li><code>%[[+/-]n.m]g</code>、<code>%[[+/-]n.m]G</code>:输出实数,根据数据大小采用e(E)或f(F),长度为n位(n小于实际长度时,按实际长度输出),m为小数位数,+表示右对齐(默认,可省略),-(左对齐).<br>例:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%g%20.8G&#x27;</span> % (<span class="number">64</span>, <span class="number">64.58</span>))  <span class="comment">#--&gt;64               6E+01</span></span><br></pre></td></tr></table></figure></li><li><code>%Y</code>、<code>%m</code>、<code>%d</code>、<code>%H</code>、<code>%M</code>、<code>%s</code>:输出年月日时分秒.<br>例:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="built_in">print</span>(time.strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>, time.localtime(time.time())))  <span class="comment">#--&gt;2022-08-17 21:14:22 </span></span><br></pre></td></tr></table></figure><h3 id="format-格式化输出"><a href="#format-格式化输出" class="headerlink" title="format()格式化输出"></a>format()格式化输出</h3></li><li>format()函数的一般格式为:<code>format(表达式[,格式化字符串])</code><br>格式化字符串:</li></ol><ul><li>[n]c –&gt; ASCII值的字符</li><li>%    –&gt; 百分号</li><li>d&#x2F;b&#x2F;o&#x2F;x&#x2F;X –&gt; 十、二、八、十六进制整数</li><li>f&#x2F;F –&gt; 实数(科学计数法)</li><li>e&#x2F;E –&gt; 实数(定点小数)</li><li>填充字符(&#x3D;: 填充字符位于符号和数字之间;&lt;左对齐,&gt;右对齐,^居中)</li><li>省略格式字符串 –&gt; 等价于str(表达式)<br>例:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">format</span>(<span class="number">65</span>, <span class="string">&#x27;^5c&#x27;</span>))   <span class="comment">#--&gt;  A  </span></span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li><code>格式化字符串.format(表达式1,...,表达式n)</code></li></ol><ul><li>格式字符串:包括普通字符和格式字符</li><li>普通字符:按照原样输出</li><li>格式字符的格式:<code>&#123;[序号/键[: ][格式字符]]&#125;</code>序号(0,1,2…)表示格式顺序(可写可不写,可颠倒顺序),键用于指向该键的数据.格式字符与<code>format()</code>类似<br>例:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello,&#123;&#125;,&#123;&#125;,&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="number">88</span>, <span class="number">65.3</span>, <span class="string">&#x27;你好&#x27;</span>)) <span class="comment">#--&gt; hello,88,65.3,你好</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello,&#123;x&#125;,&#123;y&#125;,&#123;z&#125;&#x27;</span>.<span class="built_in">format</span>(x=<span class="number">88</span>, y=<span class="number">65.3</span>, z=<span class="string">&#x27;你好&#x27;</span>)) <span class="comment">#--&gt; hello,88,65.3,你好</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello,&#123;:c&#125;,&#123;:f&#125;,&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="number">88</span>, <span class="number">65.3</span>, <span class="string">&#x27;你好&#x27;</span>)) <span class="comment">#--&gt; hello,X,65.300000,你好</span></span><br></pre></td></tr></table></figure><h1 id="f’’格式化输出"><a href="#f’’格式化输出" class="headerlink" title="f’’格式化输出"></a>f’’格式化输出</h1>python3.6以后可以支持 <code>f&#39;&#123;格式字符串:[格式字符]&#125;&#39;</code><br>例:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;abc<span class="subst">&#123;<span class="number">88</span>:7c&#125;</span><span class="subst">&#123;<span class="number">68.123</span>:15e&#125;</span>&#x27;</span>)  <span class="comment">#--&gt; abc      X   6.812300e+01</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;h1 id=&quot;标准输入&quot;&gt;&lt;a href=&quot;#标准输入&quot; class=&quot;headerlink&quot; title=&quot;标准输入&quot;&gt;&lt;/a&gt;标准输入&lt;/h1&gt;&lt;p&gt;&lt;code&gt;input()&lt;/code&gt;函数被称为格式输入语言,即按照用户指</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="基础" scheme="http://example.com/categories/%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
    <category term="语言基础" scheme="http://example.com/tags/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>版本控制Git远程常用命令</title>
    <link href="http://example.com/2022/05/22/git%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://example.com/2022/05/22/git%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2022-05-22T13:19:31.000Z</published>
    <updated>2022-05-24T09:33:18.377Z</updated>
    
    <content type="html"><![CDATA[<h2 id="初始化远程仓库"><a href="#初始化远程仓库" class="headerlink" title="初始化远程仓库"></a>初始化远程仓库</h2><h4 id="克隆版本库"><a href="#克隆版本库" class="headerlink" title="克隆版本库"></a>克隆版本库</h4><p><code>git clone &lt; url &gt;</code></p><h4 id="添加远程版本库的别名"><a href="#添加远程版本库的别名" class="headerlink" title="添加远程版本库的别名"></a>添加远程版本库的别名</h4><p><code>git remote add &lt;别名&gt;&lt; url &gt;</code></p><h4 id="删除远程版本库的别名"><a href="#删除远程版本库的别名" class="headerlink" title="删除远程版本库的别名"></a>删除远程版本库的别名</h4><p><code>git remote rm &lt;别名&gt;</code></p><h4 id="创建一个无本地分支的库"><a href="#创建一个无本地分支的库" class="headerlink" title="创建一个无本地分支的库"></a>创建一个无本地分支的库</h4><p><code>git init -bare</code></p><span id="more"></span><h2 id="远程操作"><a href="#远程操作" class="headerlink" title="远程操作"></a>远程操作</h2><h4 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h4><p>列出远程分支: <code>git branch -r</code><br>删除远程库中不存在的分支: <code>git rremote prune origin</code></p><h4 id="获取远程库"><a href="#获取远程库" class="headerlink" title="获取远程库"></a>获取远程库</h4><p>获取但是不合并: <code>git fetch &lt;远程版本库&gt;</code><br>获取并合并到当前本地分支: <code>git pull</code>或者<code>git pull &lt;远程仓库&gt;&lt;远程仓库分支&gt;</code></p><h4 id="推送远程库"><a href="#推送远程库" class="headerlink" title="推送远程库"></a>推送远程库</h4><p><code>git push &lt;远程仓库&gt;&lt;远程分支&gt;</code></p><h4 id="关联远程分支"><a href="#关联远程分支" class="headerlink" title="关联远程分支"></a>关联远程分支</h4><p>branch关联: <code>git branch -u &lt;远程仓库&gt;&lt;分支&gt;</code><br>push关联: <code>git push &lt;远程仓库&gt;&lt;分支&gt;</code></p><h4 id="展示本地仓库关联远程仓库详情"><a href="#展示本地仓库关联远程仓库详情" class="headerlink" title="展示本地仓库关联远程仓库详情:"></a>展示本地仓库关联远程仓库详情:</h4><p><code>git branch -vv</code></p><h4 id="从远程分支创建并切换到本地"><a href="#从远程分支创建并切换到本地" class="headerlink" title="从远程分支创建并切换到本地:"></a>从远程分支创建并切换到本地:</h4><p><code>git chekout -b &lt;分支&gt;&lt;远程仓库&gt;/&lt;分支&gt;</code></p><h4 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h4><p><code>git push origin --delete &lt;remote-分支&gt;</code></p><h4 id="修改远程仓库的url"><a href="#修改远程仓库的url" class="headerlink" title="修改远程仓库的url"></a>修改远程仓库的url</h4><p><code>git remote set-url origin &lt;URL&gt;</code></p><h4 id="展示忽略的文件"><a href="#展示忽略的文件" class="headerlink" title="展示忽略的文件"></a>展示忽略的文件</h4><p><code>git ststus --ignored</code></p><h4 id="强制推送"><a href="#强制推送" class="headerlink" title="强制推送"></a>强制推送</h4><p><code>git push -f &lt;远程仓库&gt;&lt;分支&gt;</code> </p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;初始化远程仓库&quot;&gt;&lt;a href=&quot;#初始化远程仓库&quot; class=&quot;headerlink&quot; title=&quot;初始化远程仓库&quot;&gt;&lt;/a&gt;初始化远程仓库&lt;/h2&gt;&lt;h4 id=&quot;克隆版本库&quot;&gt;&lt;a href=&quot;#克隆版本库&quot; class=&quot;headerlink&quot; title=&quot;克隆版本库&quot;&gt;&lt;/a&gt;克隆版本库&lt;/h4&gt;&lt;p&gt;&lt;code&gt;git clone &amp;lt; url &amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;添加远程版本库的别名&quot;&gt;&lt;a href=&quot;#添加远程版本库的别名&quot; class=&quot;headerlink&quot; title=&quot;添加远程版本库的别名&quot;&gt;&lt;/a&gt;添加远程版本库的别名&lt;/h4&gt;&lt;p&gt;&lt;code&gt;git remote add &amp;lt;别名&amp;gt;&amp;lt; url &amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;删除远程版本库的别名&quot;&gt;&lt;a href=&quot;#删除远程版本库的别名&quot; class=&quot;headerlink&quot; title=&quot;删除远程版本库的别名&quot;&gt;&lt;/a&gt;删除远程版本库的别名&lt;/h4&gt;&lt;p&gt;&lt;code&gt;git remote rm &amp;lt;别名&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;创建一个无本地分支的库&quot;&gt;&lt;a href=&quot;#创建一个无本地分支的库&quot; class=&quot;headerlink&quot; title=&quot;创建一个无本地分支的库&quot;&gt;&lt;/a&gt;创建一个无本地分支的库&lt;/h4&gt;&lt;p&gt;&lt;code&gt;git init -bare&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="基础" scheme="http://example.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>版本控制Git本地常用命令</title>
    <link href="http://example.com/2022/05/20/git%E6%9C%AC%E5%9C%B0%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://example.com/2022/05/20/git%E6%9C%AC%E5%9C%B0%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2022-05-20T13:19:31.000Z</published>
    <updated>2022-05-22T06:03:15.874Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置git身份信息"><a href="#配置git身份信息" class="headerlink" title="配置git身份信息"></a>配置git身份信息</h2><span id="more"></span><h4 id="添加-x2F-修改用户名信息"><a href="#添加-x2F-修改用户名信息" class="headerlink" title="添加&#x2F;修改用户名信息"></a>添加&#x2F;修改用户名信息</h4><p><code>git config --globa user.name &quot;用户名&quot;</code></p><h4 id="添加-x2F-修改用户邮箱"><a href="#添加-x2F-修改用户邮箱" class="headerlink" title="添加&#x2F;修改用户邮箱"></a>添加&#x2F;修改用户邮箱</h4><p><code>git config --globa user.email &quot;邮箱&quot; </code></p><h4 id="查看用户所有信息"><a href="#查看用户所有信息" class="headerlink" title="查看用户所有信息"></a>查看用户所有信息</h4><p><code>git config -l</code></p><h4 id="查看用户名"><a href="#查看用户名" class="headerlink" title="查看用户名"></a>查看用户名</h4><p><code>git config --globa user.name </code></p><h4 id="查看用户邮箱"><a href="#查看用户邮箱" class="headerlink" title="查看用户邮箱"></a>查看用户邮箱</h4><p><code>git config --globa user.email </code></p><h2 id="初始化本地仓库"><a href="#初始化本地仓库" class="headerlink" title="初始化本地仓库"></a>初始化本地仓库</h2><p>在本地创建一个文件夹作为仓库,在仓库内运行git bash进入命令行</p><h4 id="git-init初始化仓库"><a href="#git-init初始化仓库" class="headerlink" title="git init初始化仓库"></a><code>git init</code>初始化仓库</h4><p>在仓库里会出现一个.git隐藏文件,在这个文件中包含了该仓库的所有信息</p><h2 id="本地仓库操作"><a href="#本地仓库操作" class="headerlink" title="本地仓库操作"></a>本地仓库操作</h2><p>本地仓库分为工作区,暂存区,仓库三部分.在工作区完成后需要将修改后的文件放到暂存区,没有问题的话在提交到本地仓库</p><h4 id="查看当前仓库的工作区状态"><a href="#查看当前仓库的工作区状态" class="headerlink" title="查看当前仓库的工作区状态"></a>查看当前仓库的工作区状态</h4><p><code>git status</code></p><h4 id="将工作区的文件添加到暂存区"><a href="#将工作区的文件添加到暂存区" class="headerlink" title="将工作区的文件添加到暂存区"></a>将工作区的文件添加到暂存区</h4><p>添加单个文件: <code>git add &quot;文件&quot;</code><br>添加所有文件: <code>git add .</code><br>添加某一类型文件: <code>git add *.txt</code></p><h4 id="提交到本地仓库"><a href="#提交到本地仓库" class="headerlink" title="提交到本地仓库"></a>提交到本地仓库</h4><p><code>git commit -m &quot;提交说明信息&quot;</code></p><h4 id="撤销操作"><a href="#撤销操作" class="headerlink" title="撤销操作"></a>撤销操作</h4><p>撤销添加到暂存区: <code>git reset head</code></p><p>撤销提交到仓库: <code>git reset --mixed head^版本 </code><br>    <code>--mixed</code>:不删除代码改动,撤销提交和暂存 .<br><code>--soft</code>:不删除代码改动,不撤销暂存,撤销提交.<br><code>--hard</code>:删除代码改动,撤销提交和暂存 .</p><h2 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h2><p>分支可以帮助我们在不对原来代码影响的情况下进行操作,操作之后可以再进行合并进行修改</p><h4 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支:"></a>创建分支:</h4><p><code>git branch &quot; 分支名称&quot;</code></p><h4 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支:"></a>查看分支:</h4><p>查看本地分支:<code>git branch </code><br>查看所有分支: <code>git branch -a</code></p><h4 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支:"></a>切换分支:</h4><p><code>git checkout &#39;分支&#39;</code></p><h4 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支:"></a>合并分支:</h4><p><code>git merge &#39;分支&#39;</code>产生合并冲突时,将冲突部分进行合并即可</p><h4 id="重命名分支"><a href="#重命名分支" class="headerlink" title="重命名分支:"></a>重命名分支:</h4><p>不覆盖已存在同名分支:<code>git branch -m &#39;旧&#39;&#39;新&#39;</code><br>覆盖已存在同名分支:<code>git branch -M &#39;旧&#39;&#39;新&#39;</code></p><h4 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支:"></a>删除分支:</h4><p>没有合并不会删除: <code>git branch -d &quot;分支名称&quot;</code><br>强制删除: <code>git branch -D &quot;分支名称&quot;</code></p><h2 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h2><h4 id="查看当前状态"><a href="#查看当前状态" class="headerlink" title="查看当前状态:"></a>查看当前状态:</h4><p><code>git status</code></p><h4 id="查看历史记录"><a href="#查看历史记录" class="headerlink" title="查看历史记录:"></a>查看历史记录:</h4><p><code>git log</code><br>查看分支历史记录: <code>gitk &lt;分支&gt;</code></p><h4 id="每个分支最后的提交"><a href="#每个分支最后的提交" class="headerlink" title="每个分支最后的提交:"></a>每个分支最后的提交:</h4><p><code>git branch -v</code></p><h2 id="下一篇文章分享git的远程仓库"><a href="#下一篇文章分享git的远程仓库" class="headerlink" title="下一篇文章分享git的远程仓库"></a>下一篇文章分享git的远程仓库</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;配置git身份信息&quot;&gt;&lt;a href=&quot;#配置git身份信息&quot; class=&quot;headerlink&quot; title=&quot;配置git身份信息&quot;&gt;&lt;/a&gt;配置git身份信息&lt;/h2&gt;</summary>
    
    
    
    <category term="工具" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="基础" scheme="http://example.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>使用MarkDown编写文档</title>
    <link href="http://example.com/2022/05/14/markdown%E8%AF%AD%E6%B3%95/"/>
    <id>http://example.com/2022/05/14/markdown%E8%AF%AD%E6%B3%95/</id>
    <published>2022-05-14T13:19:31.000Z</published>
    <updated>2022-05-15T08:35:06.807Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Markdown是一种轻量级标记语言，排版语法简洁，让人们更多地关注内容本身而非排版。它使用易读易写的纯文本格式编写文档，可与HTML混编，可导出 HTML、PDF 以及本身的 .md 格式的文件。因简洁、高效、易读、易写，Markdown被大量使用。</p><p>千万不要被「标记」、「语言」吓到，Markdown的语法十分简单，常用的标记符号不超过十 个，用于日常写作记录绰绰有余，不到半小时就能完全掌握。</p><span id="more"></span><h2 id="编辑工具："><a href="#编辑工具：" class="headerlink" title="编辑工具："></a>编辑工具：</h2><p>推荐使用pycharm或者VS code,他们完全可以满足我们日常查看和编辑md文件。不必下载那么多软件，只需要在我们日常编辑器里下载markdown的插件即可</p><h2 id="语法介绍："><a href="#语法介绍：" class="headerlink" title="语法介绍："></a>语法介绍：</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题:"></a>标题:</h3><p>直接在标题前加’#’就可以,几个#代表几级标题。在”#”与标题中间记得加空格。<br>例如:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure><hr><h3 id="字体"><a href="#字体" class="headerlink" title="字体:"></a>字体:</h3><h4 id="加粗"><a href="#加粗" class="headerlink" title="加粗:"></a>加粗:</h4><p>用<code>**加粗字体**</code>来加粗文字。</p><h4 id="斜体"><a href="#斜体" class="headerlink" title="斜体:"></a>斜体:</h4><p>用<code>*倾斜字体*</code>使文字倾斜。</p><h4 id="倾斜加加粗"><a href="#倾斜加加粗" class="headerlink" title="倾斜加加粗:"></a>倾斜加加粗:</h4><p>用<code>***倾斜加加粗***</code>对文字进行加粗和倾斜。</p><h4 id="删除线"><a href="#删除线" class="headerlink" title="删除线:"></a>删除线:</h4><p>使用<code>~~删除字体~~</code> 给文字添加删除线。</p><h4 id="高亮："><a href="#高亮：" class="headerlink" title="高亮："></a>高亮：</h4><p>使用<code>反引号</code>对文字进行高亮。<br>例如:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**加粗字体**</span></span><br><span class="line"><span class="emphasis">*倾斜字体*</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*倾斜加加粗*</span>**</span></span><br><span class="line">~~删除字体~~</span><br><span class="line"><span class="code">`高亮字体`</span></span><br></pre></td></tr></table></figure><p>效果:<br><strong>加粗字体</strong></p><p><em>倾斜字体</em></p><p><em><strong>倾斜加加粗</strong></em></p><p><del>删除字体</del></p><p><code>高亮字体</code></p><hr><h3 id="列表"><a href="#列表" class="headerlink" title="列表:"></a>列表:</h3><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表:"></a>有序列表:</h4><p>在数字以及符号<code>.</code>后面加空格，然后输入文本内容，</p><p>例如:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 有序列表</span><br><span class="line"><span class="bullet">2.</span> 有序列表</span><br><span class="line"><span class="bullet">    -</span> 子级无序列表</span><br><span class="line"><span class="bullet">    -</span> 子级无序列表</span><br><span class="line"><span class="bullet">3.</span> 有序列表</span><br><span class="line"><span class="bullet">    1.</span> 子级有序列表</span><br></pre></td></tr></table></figure><p>效果:</p><ol><li>有序列表</li><li>有序列表<ul><li>子级无序列表</li><li>子级无序列表</li></ul></li><li>有序列表<ol><li>子级有序列表<h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表:"></a>无序列表:</h4>直接在文本前面加<code>-</code>然后加空格就行。子级无序列表<code>-</code>前加四个空格，相对于上一级</li></ol></li></ol><p>例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 无序列表</span><br><span class="line"><span class="bullet">-</span> 无序列表</span><br><span class="line"><span class="bullet">-</span> 无序列表</span><br><span class="line"><span class="bullet">    -</span> 子级无序列表</span><br></pre></td></tr></table></figure><p>效果:</p><ul><li>无序列表</li><li>无序列表</li><li>无序列表<ul><li>子级无序列表</li></ul></li></ul><hr><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线:"></a>分割线:</h3><p>使用三个或者三个以上的<code>---</code>或者<code>***</code>可以产生分割线，不过与上一段文本空一行。</p><hr><h3 id="引用："><a href="#引用：" class="headerlink" title="引用："></a>引用：</h3><p>在符号<code>&gt;</code>后面加文本内容，该内容会以引用的方式呈现。</p><p>例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 这是一段引用的文本</span></span><br><span class="line">&gt;&gt; 这是引用中的引用</span><br><span class="line">&gt;&gt;&gt;这是引用中的引用的引用</span><br><span class="line"></span><br><span class="line"><span class="quote">&gt; 这是另一个引用，和上面的引用要空一行</span></span><br></pre></td></tr></table></figure><p>效果:</p><blockquote><p>这是一段引用的文本</p><blockquote><p>这是引用中的引用</p><blockquote><p>这是引用中的引用的引用</p></blockquote></blockquote></blockquote><blockquote><p>这是另一个引用，和上面的引用要空一行</p></blockquote><hr><h3 id="链接"><a href="#链接" class="headerlink" title="链接:"></a>链接:</h3><p>可以在直接写链接如: <a href="http://www.baidu.com,会直接显示,只显示链接文本的话用反引号将链接包裹./">www.baidu.com,会直接显示,只显示链接文本的话用反引号将链接包裹。</a><br>在文本中插入链接可以使用<code>[文本](链接)</code>的方式:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">百度</span>](<span class="link">www.baidu.com</span>)</span><br></pre></td></tr></table></figure><p>效果:<br><a href="www.baidu.com">百度</a></p><hr><h3 id="图片："><a href="#图片：" class="headerlink" title="图片："></a>图片：</h3><p>支持本地图片和线上图片。格式是：<code>![图片描述](图片地址)</code>。</p><p>例如：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片](https:<span class="regexp">//</span>w.wallhaven.cc<span class="regexp">/full/g</span>7/wallhaven-g7kg83.jpg)</span><br></pre></td></tr></table></figure><p>效果:<br><img src="https://w.wallhaven.cc/full/g7/wallhaven-g7kg83.jpg" alt="图片"></p><hr><h3 id="表格"><a href="#表格" class="headerlink" title="表格:"></a>表格:</h3><p>我们可以在markdown里面添加表格，并可以设定文字的对齐方式，</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">|表头1|表头2|表头3|</span><br><span class="line">|:----|:----:|----:|</span><br><span class="line">|内容1|内容2|内容3|</span><br></pre></td></tr></table></figure><p>注意点：</p><ul><li>第二行中要<code>四个短横杠</code>  </li><li>第二行的<code>冒号</code>，可以规定对齐方式，在短横杠的左边就是左对齐，在右边就是右对齐，两个冒号就是居中</li><li>每一行必须要有相同多个<code>|</code></li></ul><p>效果：</p><table><thead><tr><th align="left">表头1</th><th align="center">表头2</th><th align="right">表头3</th></tr></thead><tbody><tr><td align="left">内容1</td><td align="center">内容2</td><td align="right">内容3</td></tr></tbody></table><hr><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块:"></a>代码块:</h3><p>使用两个&#96;&#96;&#96;来包裹代码文本,</p><p>整个代码的区块要特别的标识出来，并且代码要支持高亮等要在第一个&#96;&#96;&#96;后面加上对应的语言。<br>例如:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```python</span></span><br><span class="line"><span class="code">print(&#x27;hello world&#x27;)</span></span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">效果:</span><br><span class="line">```python</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">&#x27;hello world&#x27;</span>)</span></span></span><br></pre></td></tr></table></figure><hr><h3 id="内嵌HTML"><a href="#内嵌HTML" class="headerlink" title="内嵌HTML"></a>内嵌HTML</h3><p>如果你还想要更加复杂的样式，可以在markdown中嵌入HTML代码。<br>例如：  </p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;display:iline;text-align:right;color:blue;&quot;</span>&gt;</span></span>蓝色居左<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;display:block;text-align:right;color:red;&quot;</span>&gt;</span></span>红色居右<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;display:block;text-align:center;color:red;&quot;</span>&gt;</span></span>绿色居中<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><span style="display:iline;text-align:right;color:blue;">蓝色居左</span><br><span style="display:block;text-align:right;color:red;">红色居右</span><br><span style="display:block;text-align:center;color:green;">绿色居中</span></p><hr><p><code>emmmm,平常用到的markdown语法也就这么多,如果想了解更多留下评论.</code><br>                  <code>正在python道路上越走越远的up</code></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Markdown是一种轻量级标记语言，排版语法简洁，让人们更多地关注内容本身而非排版。它使用易读易写的纯文本格式编写文档，可与HTML混编，可导出 HTML、PDF 以及本身的 .md 格式的文件。因简洁、高效、易读、易写，Markdown被大量使用。&lt;/p&gt;
&lt;p&gt;千万不要被「标记」、「语言」吓到，Markdown的语法十分简单，常用的标记符号不超过十 个，用于日常写作记录绰绰有余，不到半小时就能完全掌握。&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="基础" scheme="http://example.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="MarkDown" scheme="http://example.com/tags/MarkDown/"/>
    
  </entry>
  
</feed>
